@model Prototype.Models.CandidateProfile

@{
    ViewData["Title"] = "Keep Your Details Up To Date";
}

<script type="text/javascript">


        $(document).ready(function () {


       
        $.ajax({
            url: '/Candidate/GetSkillsForCandidateUpdate',
            dataType: "Json",
            type: "GET",
            data: "" ,
            contentType: 'application/x-www-form-urlencoded',
            cache: false,
            
            success: function (data) {



                //loops through values returned in json format by above url
                var disabledOption = '<option selected value="" >Select Skills</option>';
                $.each(data, function (key, val) {

                    disabledOption += '<option  value="' + val.skillId + '">' + val.skillName +
                        '</option>';

                });//end of for loop

                $("#skillsDropdown").html(
                    disabledOption


                );//end of html

            }, //end of success function
            error: function (xhr) {
                alert( 'error');
            }

        }); //end ajax


            $.ajax({
                url: '/Analytics/AnalysisByCandidateJobTitle',
                dataType: "Json",
                type: "GET",
                data:  { jobTitle: '@Model.JobTitleEnum'},
                contentType: 'application/x-www-form-urlencoded',
                cache: false,
                success: function (data) {
                    
                    //set up data for chart
                    const labels = ['Entry', 'Intermediate', 'Expert',];
                    const chartData = {
                        labels: labels,
                        datasets: [{
                            label: 'Average',
                            backgroundColor: 'rgb(82, 171, 152)',
                            borderColor: 'rgb(82, 171, 152)',
                            data: [data.AverageEntry, data.AverageIntermediate, data.AverageExpert],
                            type: 'line'
                        },
                        {
                            label: 'Lowest Rate',
                            backgroundColor: 'rgb(	43, 103, 119)',
                            borderColor: 'rgb(255, 99, 132)',
                            data: [data.LowestEntry, data.LowestIntermediate, data.LowestExpert],
                        },
                        {
                            label: 'Highest Rate',
                            backgroundColor: 'rgb(54, 90, 111)',
                            borderColor: 'rgb(255, 99, 132)',
                            data: [data.HighestEntry, data.HighestIntermediate, data.HighestExpert],
                        }

                        ]
                    };

                    //render chart
                    const config = {
                        type: 'bar',
                        data: chartData,
                        options: {}
                    };

                    var myChart = new Chart(
                        document.getElementById('myChart'),
                        config
                    );



                }, //end of success function
                error: function (xhr) {
                    alert('error');
                }

            }); //end ajax

    }); //end document.load

</script>

<div class="container text">

    <h1 class="heading">Keep You Details Updated Here</h1>

    <div class="row">

        <div class="col-sm add-margin">
            <h3>Your Current Details</h3>

            <h5 class="buffer">Job Title: @Model.JobTitle</h5>
            <h5 class="buffer">Requested Rate: @Model.Rate per hour</h5>
          
            <h5 class="buffer">
                Current Availablity: @if (Model.IsAvailable)
                {<span>Available For Contracts <button type="button" onclick="location.href='@Url.Action("ToggleCandidateAvailability", "Candidate") '" class="btn btn-primary"><i class="fas fa-toggle-on"></i></button></span>}
                else
                {<span>Not AvailableFor Contracts <button type="button" onclick="location.href='@Url.Action("ToggleCandidateAvailability", "Candidate") '" class="btn btn-primary"><i class="fas fa-toggle-off"></i></button></span>}
            </h5>
            <h5 class="buffer">Available Date: @Model.AvailableFrom.ToShortDateString()</h5>
            <h5 class="buffer">Current Level: @Model.Level</h5>
            <h5 class=" buffer">
                Skills:

                @foreach (var skill in Model.Skills)
                {
                    <span class="badge skill">@skill.SkillName</span>

                }
            </h5>

            <div><h4>Check out rates other candidates with your job title are asking for!</h4></div>
            <div>
                <canvas id="myChart"></canvas>
            </div>


        </div>
        <div class="col-sm">
            <h3>Actions</h3>

            <form asp-action="UpdateCandidateSkill" asp-controller="Candidate" method="post" enctype="multipart/form-data">

                <div class="input-group">

                    <select class="form-control" id="skillsDropdown" name="skillsIds" multiple required>
                        <!--This dropdown is populated by ajax-->
                    </select>
                </div>
                <button type="submit" class="btn btn-primary"><i class="fas fa-plus"></i></button>
            </form>

            <form asp-action="UpdateCandidateJobTitle" asp-controller="Candidate" method="post" enctype="multipart/form-data">

                <div class="input-group">
                    <div class="form-group">
                        <label asp-for="JobTitleEnum">Job Title</label>
                        <select name="jobTitle" asp-items="Html.GetEnumSelectList<JobTitle>()" class="form-control"></select>
                        <span asp-validation-for="JobTitleEnum" class="text-danger"></span>
                    </div>

                </div>
                <button type="submit" class="btn btn-primary"><i class="fas fa-edit"></i></button>
            </form>

            <form asp-action="UpdateCandidateLevel" asp-controller="Candidate" method="post" enctype="multipart/form-data">

                <div class="input-group">
                    <div class="form-group">
                        <label asp-for="LevelEnum">Update Your Level</label>
                        <select name="level" asp-items="Html.GetEnumSelectList<Level>()" class="form-control"></select>
                        <span asp-validation-for="LevelEnum" class="text-danger"></span>
                    </div>

                </div>
                <button type="submit" class="btn btn-primary"><i class="fas fa-edit"></i></button>
            </form>

            <form asp-action="UpdateCandidateRate" asp-controller="Candidate" method="post" enctype="multipart/form-data">

                <div class="input-group">
                    <div class="form-group">
                        <label asp-for="Rate">Update Your Required Rate</label>
                        <input asp-for="Rate" class="form-control" />
                        <span asp-validation-for="Rate" class="text-danger"></span>
                    </div>

                </div>
                <button type="submit" class="btn btn-primary"><i class="fas fa-pound-sign"></i></button>
            </form>

            <form asp-action="UpdateCandidateAvailableDate" asp-controller="Candidate" method="post" enctype="multipart/form-data">
                <div class="form-group">

                    <label asp-for="AvailableFrom"></label>
                    <input name="availableDate" type="date" class="form-control" id="exampleFormControlTextarea1">
                    <span asp-validation-for="AvailableFrom" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary"><i class="far fa-calendar-alt"></i></button>
            </form>






        </div>









    </div>






























</div>