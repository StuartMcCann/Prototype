
@model IEnumerable<Prototype.Models.CandidateProfile> 
    <h1 class="heading add-margin">Check out who's available here!</h1>
    <div class=" container">
        <div id="myGrid" class="ag-theme-alpine" style="height: 600px; width:900px;"></div>
    </div>
<script type="text/javascript" charset="utf-8">

    var skillValueGetter = function (params) {
        var cellData = '';
        if (params.data.skills.length != 0) {
          
            for (var loop = 0; loop < params.data.skills.length; loop++) {

                var skill = params.data.skills[loop].skillName;
                cellData += ' ' + skill;
                if (loop != params.data.skills.length-1) {
                    cellData += ', '; 
                }
            }
        }


        return cellData;
    }

    var ratingValueGetter = function (params) {
        console.log(params.value);
        var cellData = '';
        if (params.value == 0) {
            cellData += 'No Ratings Yet'; 
        }
        for (var loop = 0; loop < params.value; loop++) {
           
            cellData += ' <i class= " heading fas fa-star" ></i>';

        }
        return cellData;
    }



        // specify the columns
        const columnDefs = [
            {
                field: "fullName", sortable: true, filter: true, editable: true,
                cellRenderer: function (params) {
                     var url = '@Url.Action("CandidateProfile", "Candidate", new { id = "replaceToken" })';
                    url = url.replace("replaceToken", params.data.candidateID);
                    return '<a href="'+url+'">' + params.value + '</a>'
                }
            },
            { field: "jobTitle", sortable: true, filter: true },
            {
                field: "rating", sortable: true, filter: true,

                cellRenderer: function (params) {
                    console.log(params.value);
                    var cellData = "<span>";
                    if (params.value == 0) {
                        cellData += 'Not Rated Yet'; 
                    } else {
                        for (var loop = 0; loop < params.value; loop++) {
                            cellData += ' <i class= " heading fas fa-star" ></i>';

                        }
                    }
                    
                    return cellData += '</span>';

                }



            },
            {
                field: "skills", sortable: true, filter: true, valueGetter: skillValueGetter
            }
            ,

            { field: "level", sortable: true, filter: true },

            { field: "rate", sortable: true, filter: true },


            ];



        // let the grid know which columns to use
        const gridOptions = {
            columnDefs: columnDefs
        };

        // lookup the container we want the Grid to use
        const eGridDiv = document.querySelector('#myGrid');

        // create the grid passing in the div to use together with the columns & data we want to use
        new agGrid.Grid(eGridDiv, gridOptions);

         //fetch the row data to use and one ready provide it to the Grid via the Grid API        
        agGrid.simpleHttpRequest({ url: '@Url.Action("GetAvailableCandidates", "Candidate")' })
            .then(data => {
                gridOptions.api.setRowData(data);
            });





</script>






