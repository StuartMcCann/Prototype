@model Prototype.Models.Employer
<script type="text/javascript">

    $(document).ready(function () {


         $.ajax({
            url: '/Job/GetJobsByEmployerId',
            dataType: "Json",
            type: "GET",
            data: {employerId: @Model.EmployerId},
            contentType: 'application/json; charset=utf-8',
            cache: false,


            success: function (data) {
                console.log(data)
               // loops through values returned in json format by above url
                if (data != null) {


                    $.each(data, function (key, val) {


                        //action link use to generate url stringi
                        var url = '@Url.Action("JobProfile", "Job", new { id = "replaceToken" })';
                        url = url.replace("replaceToken", val.jobId);
                        //bleow appende content to div with id passed as arg
                        $("#jobsoutput").append(

                            '<div class"card ">' +
                            '<div class="card-body">' +

                            '<a href="' + url + '"><h5 class="card-title">' + val.jobTitle + ' </h5></a>' +
                            "<h5 class='card-text'>Duration:" + val.duration + ' weeks</h5>' +
                            '<p class="card-text">Start Date: ' + val.startDate.substring(0, 10) + '</p>' +


                            '</div>' +
                            ' </div>'
                        );//end of .append
                    });//end of for loop
                } else {
                    $("#jobsoutput").append(
                        '<h4> This employer has no live vacancies at the minute, feel free to give them a like or message for any speculative openings!</h4>'
                    );
                }
            }, //end of success function
            error: function (xhr) {
                alert( 'error');
            }

        }); //end ajax



        //ajax to check if employer likes candidate and alter like button
         $.ajax({
            url: '/Like/AlreadyLiked',
            dataType: "Json",
            type: "GET",
            contentType: 'application/json; charset=utf-8',
            cache: false,
            //this needs changed whe table fully normalised
            data: { id : @Model.EmployerId}  ,
            success: function (data) {
                console.log(data);
                //if already liked replace with unlike button
                if (data == true) {
                    var url = '@Url.Action("RemoveLikeForEmployer", "Like", new { employerId = Model.EmployerId } )';

                    $("#like").html(
                        '<div id="like">' +
                        '<a href="' + url + '"><button type="button" class="btn btn-primary">UnLike <i class="fas fa-minus-circle"></i></button></a>'+
                     /*   ' <button type="button" class="btn btn-primary">UnLike <i class="fas fa-minus-circle"></i></button>' +*/
                        '</div>'
                    );
                }else {

                     var url = '@Url.Action("CreateLikeEmployer", "Like", new { employerId = Model.EmployerId } )';


                    $("#like").html(
                        '<div id="like">' +

                        '<a href="' + url + '"><button type="button" class="btn btn-primary">Like <i class="fas fa-thumbs-up"></i></button></a>' +
                        '</div>'
                    );

                }




            },
            error: function (xhr) {
                alert('error');
            }

        }); //end ajax

        //ajax to check if candidate has mutual like with employer and then allow messaging
        $.ajax({
            url: '/Like/HasMutualLike',
            dataType: "Json",
            type: "GET",
            contentType: 'application/json; charset=utf-8',
            cache: false,
            //this needs changed whe table fully normalised
            data: { id : @Model.EmployerId}  ,
            success: function (data) {
                console.log(data);
                //if mutual like true replace with message
                if (data == true) {
                     var url = '@Url.Action("EmployerPageRedirect", "Chat", new { employerId = @Model.EmployerId })';
                    $("#message").html(
                        '<div id="message">' +
                        //'<button onclick="location.href="' + url +'" class="btn btn-primary"  type="button"> Message</button>'

                        '<a href="' + url + '"><button class="btn btn-primary ">Message</button></a>'
                        + '<p><i class="fas fa-handshake"></i> Congrats you both liked each other!</p>'
                        +'</div>'
                    );
                }




            },
            error: function (xhr) {
                alert('error');
            }

        }); //end ajax


        }); //end document.load



</script>
<div class="container text buffer">
    <div class=" row">
        <div class="col-sm">
            <h1>@Model.CompanyName</h1>
        </div>


    </div>
    <div class="row ">
        <div class="col-sm">
            @if (User.IsInRole("Candidate"))
            {
                <div id="message"></div>
            }
        </div>
        <div class="col-sm">
            @if (User.IsInRole("Candidate"))
            {
                <div id="like"></div>
            }
        </div>

    </div>
    <div class="row buffer">

        <div class="col-sm">

            @if (Model.CompanyLogo != null)
            {
                <img id="profilePicture" style="width:350px;height:350px; object-fit:cover" src="data:image/*;base64,@(Convert.ToBase64String(Model.CompanyLogo))">
            }
            else
            {
                <img id="profilePicture" style="width:350px;height:350px; object-fit:cover" src="https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png">
            }


        </div>
        <div class="col-sm">
            <h3>Overview</h3>
            <p>@Model.CompanyOverview</p>

           



        </div>


    </div>
    <h3>Jobs with @Model.CompanyName</h3>
    <div class=" scrollgrid border ">
        <div class="container buffer">

            <!--ajax call to get jobs by user id content appened to this div -->
            <div id="jobsoutput"></div>
        </div>










    </div>
