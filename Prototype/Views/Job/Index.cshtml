<h1 class="heading add-margin">Check out who's actively recruiting here!</h1>
<div class="container  ">

    <div id="myGrid" class="ag-theme-alpine" style="height: 600px; width:1100px;"></div>

</div>
<script type="text/javascript" charset="utf-8">
        // specify the columns

    var skillValueGetter = function (params) {
        var cellData = '';
                    if (params.data.skills.length != 0) {
                       // console.log(params.data.skills);
                        for (var loop = 0; loop < params.data.skills.length; loop++) {

                            var skill = params.data.skills[loop].skillName;

                           cellData += ' ' + skill + ' ';
                        }
                    }


                    return cellData ;
    }
        const columnDefs = [
            {
                field: "jobTitle", sortable: true, filter: true,
                cellRenderer: function (params) {
                     var url = '@Url.Action("JobProfile", "Job", new { id = "replaceToken" })';
                    url = url.replace("replaceToken", params.data.jobId);
                    return '<a href="'+url+'">' + params.value + '</a>'
                }
            },
            {
                field: "skills", sortable: true, filter: true, valueGetter: skillValueGetter
               
            }
                ,
            {
                field: "companyName", sortable: true, filter: true,

                 cellRenderer: function (params) {
                     var url = '@Url.Action("Index", "Employer", new { id = "replaceToken" })';
                    url = url.replace("replaceToken", params.data.employerId);
                    return '<a href="'+url+'">' + params.value + '</a>'
                }


            },
            {
                field: "rating", sortable: true, filter: true, 

                cellRenderer: function (params) {
                    console.log(params.value); 
                    var cellData = "<span>"; 
                    for (var loop = 0; loop < params.value; loop++) {
                        cellData += ' <i class= " heading fas fa-star" ></i>'; 
                                              
                    }
                    return cellData+='</span>'; 
                   
                }
                   


            },
            { field: "lowerRate", sortable: true, filter: true },

            { field: "upperRate", sortable: true, filter: true },

            { field: "duration", sortable: true, filter: true },
            { field: "jobDescription", sortable: true, filter: true }

            ];



        // let the grid know which columns to use
        const gridOptions = {
            columnDefs: columnDefs
        };

        // lookup the container we want the Grid to use
        const eGridDiv = document.querySelector('#myGrid');

        // create the grid passing in the div to use together with the columns & data we want to use
        new agGrid.Grid(eGridDiv, gridOptions);


        agGrid.simpleHttpRequest({ url: '@Url.Action("GetAllLiveJobs", "Job")' })
            .then(data => {
                gridOptions.api.setRowData(data);
            });
      


</script>





