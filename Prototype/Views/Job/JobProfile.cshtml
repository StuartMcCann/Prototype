@model Prototype.Models.JobProfile




<script type="text/javascript">

    $(document).ready(function () {



        $.ajax({
            url: '/Job/GetJobsLikeThis',
            dataType: "Json",
            type: "GET",
            contentType: 'application/json; charset=utf-8',
            cache: false,
            //this needs changed whe table fully normalised
            data: { title: "@Model.JobTitle", jobId : @Model.JobId}  ,
            success: function (data) {
                
                //loops through values returned in json format by above url
                $.each(data, function (key, val) {
                    //need to add validation that not empty here
                     var url = '@Url.Action("JobProfile", "Job", new { id = "replaceToken" })';
                    url = url.replace("replaceToken", val.jobId);

                    //$("#output").append(val.title);
                    $("#output").append(
                        "<div class='buffer'>"+
                        "<div class='card'>" +
                        '<a href="' + url + '"><h5 class="card-header">' + val.jobTitle + '</h5></a>'+
                       //"<h5 class= 'card-header'>"+val.jobTitle+"</h5>"+
                                "<div class='card-body'>"+
                                    "<h5 class='card-title'>Rate: £"+val.lowerRate+"-"+val.upperRate+" per hour</h5>"+

                        "<h5 class='card-title'>" + val.companyName + "</h5>" +
                        "<h5 class='card-title'>Starting: " + val.displayStartDate + "</h5>" +

                            "</div>"+
                            "</div>"+
                        "</div>"
                    );
                });




            },
            error: function (xhr) {
                alert('error');
            }

        }); //end ajax

         //ajax to check if Candidate already likes employer and alter like button
         $.ajax({
            url: '/Like/AlreadyLikedJob',
            dataType: "Json",
            type: "GET",
            contentType: 'application/json; charset=utf-8',
            cache: false,
            //this needs changed whe table fully normalised
            data: { jobId : @Model.JobId}  ,
            success: function (data) {
                //console.log(data);
                //if already liked replace with unlike button
                if (data == true) {
                    var url = '@Url.Action("RemoveLikeForJob", "Like", new { jobId = Model.JobId })';
                    //url = url.replace("replaceToken", val.jobId);

                    $("#like").html(
                        '<div id="like">' +

                        '<a href="' + url + '"><button type="button" class="btn btn-primary">UnLike <i class="fas fa-minus-circle"></i></button></a>' +
                        '</div>'
                    );
                } else {          
             
                     var url = '@Url.Action("CreateLikeJob", "Like", new { employerId = Model.EmployerId ,jobId = Model.JobId })';
                                

                    $("#like").html(
                        '<div id="like">' +

                        '<a href="' + url + '"><button type="button" class="btn btn-primary">Like <i class="fas fa-thumbs-up"></i></button></a>' +
                        '</div>'
                    );

                }




            },
            error: function (xhr) {
                alert('error');
            }

         }); //end ajax

       

        //ajax to check if candidate has mutual like with employer and then allow messaging
        $.ajax({
            url: '/Like/HasMutualLike',
            dataType: "Json",
            type: "GET",
            contentType: 'application/json; charset=utf-8',
            cache: false,

            data: { id : @Model.EmployerId}  ,
            success: function (data) {
                //console.log(data);
                //if mutual like true replace with message
                if (data == true) {
                     var url = '@Url.Action("Index", "Chat", new { userId = @Model.UserId })';
                    $("#message").html(
                        '<div id="message">' +
                        //'<button onclick="location.href="' + url +'" class="btn btn-primary"  type="button"> Message</button>'

                        '<a href="' + url + '"><button class="btn btn-primary marginTop">Message</button></a>'
                        + '<p><i class="fas fa-handshake"></i> Congrats you both liked each other!</p>'
                        +'</div>'
                    );
                }
            },
            error: function (xhr) {
                alert('error');
            }

        }); //end ajax

    }); //end document.load






</script>
    <div class="container buffer text">
        <div class="row heading">
            
            <div class="col-sm-8"><a asp-controller="Employer" asp-action="Index" asp-route-id="@Model.EmployerId">
                <h1>@Model.CompanyName  </h1></a></div>
            <div class="col-sm-4"><h1>Employer Rating: @Model.Rating/5</h1></div>
        </div>
        <div class="row buffer ">
            <div class="col-sm">
                <h2>@Model.JobTitleEnum.GetDisplayName()</h2>

                <h2>FROM £@Model.LowerRate - @Model.UpperRate</h2>
                <h2>Start Date: @Model.StartDate.ToShortDateString()</h2>
                <h2>Duration: @Model.Duration weeks</h2>
            </div>
            <div class="col-sm">
            </div>
            <div class="col-sm">

                <div id="like">
                    @*<button type="button" class="btn btn-primary">Like <i class="fas fa-thumbs-up"></i></button>*@
                </div>
                <div id="message">
                    @*<a asp-controller="Chat" asp-action="Index" asp-route-userId="@Model.UserId">
                    <button type="button" class="btn btn-primary">Message <i class="far fa-envelope"></i>
                        </button></a>*@
                </div>
            </div>




        </div>
        <div class="row buffer ">
            <div class="col-sm-8 ">
                <h3>Company Profile</h3>
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec vestibulum eleifend odio, ut egestas urna pellentesque vitae. Cras euismod dolor augue, eu porta arcu rutrum vitae. Mauris lacinia placerat nunc vitae consectetur. Ut viverra ipsum justo, vitae tristique erat tincidunt accumsan. Mauris et sem et augue commodo pretium. Proin aliquet.</p>
                <h3>Job Desription</h3>
                <p>@Model.JobDescription</p>
                <h3>Skills Required</h3>
                <h3>
                    @foreach (var skill in Model.Skills)
                    {
                        <span class="badge skill">@skill.SkillName</span>

                    }
                </h3>

            </div>
            <div class="col-sm-4 buffer">
                <h3>More Like This</h3>

                <div id="output"></div>
            

            </div>

        </div>




    </div>





